data(mtcars)
head(mtcars)
library(GGally)
ggpairs(mtcars[,1:5])
library(Hmisc)
library(Hmisc)
corrs <- rcorr(as.matrix(mtcars))
corrs$r
corrs$P
R<- corrs$r
R[1,]
tinytex::install_tinytex()
help(pbinom)
pbinom(3, 1, 0.7)
pbinom(13, 1, 0.7)
pbinom(1, 1, 0.7)
pbinom(0, 1, 0.7)
pbinom(0, 3, 0.7)
pbinom(0, 2, 0.7)
pbinom(0, 0, 0.7)
pbinom(0, 10, 0.7)
pbinom(1, 10, 0.7)
tinytex::install_tinytex()
install.packages(c("faraway", "missForest", "UsingR"))
a.docencia <- c(3,1,1,2,5,6,12,7,3,10,6,11,4,4,16,4,5,3,5,2)
edad <- c(35,27,26,30,33,42,51,35,45,37,43,36,36,56,29,35,37,29,34,29)
plot(edad, a.docencia)
Y <- a.docencia
X <- edad
lm(Y~X) -> mod_reg
mod_reg
summary(mod_reg)
plot(edad,a.docencia)
abline(mod_reg)
cor(edad,a.docencia)^2
mod_constant <- lm(a.docencia~1)
mod_constant
summary(mod_constant)
sd(a.docencia) #desviación típica de años de docencia
mean(a.docencia) #media de años de docencia
plot(edad,a.docencia)
abline(mod_constant)
predict.lm(mod_reg, X)
predict.lm(mod_reg, newdata=X)
predict.lm(mod_reg, newdata=edad)
nuevos_datos<-data.frame(X)
predict.lm(mod_reg, newdata=nuevos_datos)
lm(a.docencia~edad+I(edad^2))->r2
r2
summary(r2)
plot(a.docencia~edad)
lines(sort(edad), fitted(r2)[order(edad)], col='red')
nuevosdatos <- data.frame(edad=c(30,40,50))
predict.lm(r2,newdata = nuevosdatos)
plot(a.docencia~nuevosdatos)
nuevosdatos <- data.frame(edad=edad
predict.lm(r2,newdata = nuevosdatos)
nuevosdatos <- data.frame(edad=edad)
predict.lm(r2,newdata = nuevosdatos)
plot(a.docencia~nuevosdatos)
plot(a.docencia~edad)
lines(sort(edad), fitted(r2)[order(edad)], col='red')
install.packages(c("caret", "e1071", "ElemStatLearn"))
library(ElemStatLearn)
data("SAheart")
help(SAheart)
head(SAheart)
summary(SAheart)
help("glm")
mod <- glm(chd~tobacco, data=SAheart, family=binomial)
mod$coefficients
summary(mod)
plot(chd ~ tobacco, data=SAheart)
lines(sort(SAheart$tobacco), mod$fitted[order(SAheart$tobacco)], type="o", col="red")
mod <- glm(chd~., data=SAheart, family=binomial)
mod$coefficients
summary(mod)
y_pred <- predict(mod, subset(SAheart,select = -chd ), type="response")
head(y_pred)
summary(mod)
plot(mod,which=1)
fit1 <- glm(chd~., data=SAheart, family=binomial)
fit0 <- glm(chd~1, data=SAheart, family=binomial)
library(MASS)
step <-stepAIC(fit0,direction="both",scope=list(upper=fit1,lower=fit0))
mod <- glm(chd ~ age + famhist + tobacco + typea + ldl, data=SAheart, family=binomial)
mod$coefficients
step$residuals
plot(predict(step),residuals(step))
coefficients(step)
y_pred <- predict(step)>.5
head(y_pred)
head(SAheart$chd)
install.packages("glmnet")
library(MASS)
data(Boston)
colnames(Boston)
str(Boston)
help("Boston")
View(mod)
cwd
pwd
wdir
setwd("~/Estudios/Estudios MOOC/Udemy/CursoR/r-course")
auto <- read.csv("data\tema1\auto-mpg.csv")
auto <- read.csv("data/tema1/auto-mpg.csv")
View(auto)
auto <- read.csv("data/tema1/auto-mpg.csv", header=TRUE)
View(auto)
auto <- read.csv("data/tema1/auto-mpg.csv", header=TRUE, sep=",")
View(auto)
View(auto)
auto <- read.csv("data/tema1/auto-mpg.csv", header=TRUE, sep=",")
View(auto)
setwd("~/Estudios/Estudios MOOC/Udemy/CursoR/r-course")
setwd("~/Estudios/Estudios MOOC/Udemy/CursoR/r-course")
auto <- read.csv("data/tema1/auto-mpg.csv", header=TRUE, sep=",")
View(auto)
auto <- read.csv("data/tema1/auto-mpg.csv", header=TRUE, sep=",")
View(auto)
View(auto)
names(auto)
auto_no_header <- read.csv("data/tema1/auto-mpg-noheader.csv", header=FALSE, sep=",")
View(auto_no_header)
View(auto_no_header)
head(auto_no_header, 4)
auto_custom_header <- read.csv("data/tema1/auto-mpg-noheader.csv", header=FALSE, sep=",", col_names=c("numero", "millas_por_galeon", "cilindrada", "desplazamiento", "caballos_de_potencia", "peso", "aceleracion", "año", "modelo"))
auto_custom_header <- read.csv("data/tema1/auto-mpg-noheader.csv",
header=FALSE, sep=",",
col.names=c("numero", "millas_por_galeon", "cilindrada", "desplazamiento", "caballos_de_potencia", "peso", "aceleracion", "año", "modelo"))
head(auto_custom_header)
#read,csv2 == read.csv("filename", sep=";", dec=",")
#sep="t"
auto <- read.csv("data/tema1/auto-mpg.csv", header=TRUE, sep=",", strings.na="")
names(auto)
auto_no_header <- read.csv("data/tema1/auto-mpg-noheader.csv", header=FALSE, sep=",")
head(auto_no_header, 4)
auto_custom_header <- read.csv("data/tema1/auto-mpg-noheader.csv",
header=FALSE, sep=",",
col.names=c("numero", "millas_por_galeon", "cilindrada",
"desplazamiento", "caballos_de_potencia",
"peso", "aceleracion", "año", "modelo")
)
head(auto_custom_header, 4)
View(auto)
View(auto)
cls
#read,csv2 == read.csv("filename", sep=";", dec=",")
#sep="t"
auto <- read.csv("data/tema1/auto-mpg.csv", header=TRUE, sep=",", strings.na="")
names(auto)
auto_no_header <- read.csv("data/tema1/auto-mpg-noheader.csv", header=FALSE, sep=",")
head(auto_no_header, 4)
auto_custom_header <- read.csv("data/tema1/auto-mpg-noheader.csv",
header=FALSE, sep=",",
col.names=c("numero", "millas_por_galeon", "cilindrada",
"desplazamiento", "caballos_de_potencia",
"peso", "aceleracion", "año", "modelo")
)
head(auto_custom_header, 4)
#read,csv2 == read.csv("filename", sep=";", dec=",")
#sep="t"
auto <- read.csv("data/tema1/auto-mpg.csv", header=TRUE, sep=",", strings.na="", stringsAsFactors = F)
names(auto)
auto_no_header <- read.csv("data/tema1/auto-mpg-noheader.csv", header=FALSE, sep=",")
head(auto_no_header, 4)
auto_custom_header <- read.csv("data/tema1/auto-mpg-noheader.csv",
header=FALSE, sep=",",
col.names=c("numero", "millas_por_galeon", "cilindrada",
"desplazamiento", "caballos_de_potencia",
"peso", "aceleracion", "año", "modelo")
)
head(auto_custom_header, 4)
View(auto)
View(auto)
#read,csv2 == read.csv("filename", sep=";", dec=",")
#sep="t"
auto <- read.csv("data/tema1/auto-mpg.csv", header=TRUE, sep=",", strings.na="",
strings.na="", stringsAsFactors = F)
names(auto)
auto_no_header <- read.csv("data/tema1/auto-mpg-noheader.csv", header=FALSE, sep=",")
head(auto_no_header, 4)
auto_custom_header <- read.csv("data/tema1/auto-mpg-noheader.csv",
header=FALSE, sep=",",
col.names=c("numero", "millas_por_galeon", "cilindrada",
"desplazamiento", "caballos_de_potencia",
"peso", "aceleracion", "año", "modelo")
)
head(auto_custom_header, 4)
#read,csv2 == read.csv("filename", sep=";", dec=",")
#sep="t"
auto <- read.csv("data/tema1/auto-mpg.csv", header=TRUE, sep=",", strings.na="",
strings.na="", stringsAsFactors = F)
names(auto)
auto_no_header <- read.csv("data/tema1/auto-mpg-noheader.csv", header=FALSE, sep=",")
head(auto_no_header, 4)
auto_custom_header <- read.csv("data/tema1/auto-mpg-noheader.csv",
header=FALSE, sep=",",
col.names=c("numero", "millas_por_galeon", "cilindrada",
"desplazamiento", "caballos_de_potencia",
"peso", "aceleracion", "año", "modelo")
)
head(auto_custom_header, 4)
View(auto)
View(auto)
#read,csv2 == read.csv("filename", sep=";", dec=",")
#sep="t"
auto <- read.csv("data/tema1/auto-mpg.csv", header=TRUE, sep=",", strings.na="",
strings.na="", stringsAsFactors = FALSE)
#read,csv2 == read.csv("filename", sep=";", dec=",")
#sep="t"
auto <- read.csv("data/tema1/auto-mpg.csv", header=TRUE, sep=",",
strings.na="", stringsAsFactors = FALSE)
#read,csv2 == read.csv("filename", sep=";", dec=",")
#sep="t"
auto <- read.csv("data/tema1/auto-mpg.csv", header=TRUE, sep=",", stringsAsFactors = FALSE)
#read,csv2 == read.csv("filename", sep=";", dec=",")
#sep="t"
auto <- read.csv("data/tema1/auto-mpg.csv", header=TRUE, sep=",", stringsAsFactors = FALSE)
#read,csv2 == read.csv("filename", sep=";", dec=",")
#sep="t"
auto <- read.csv("data/tema1/auto-mpg.csv", header=TRUE, sep=",", na.strings = "", stringsAsFactors = FALSE)
who_from_internet <- read.csv="https://frogames.es/course-contents/r/intro/tema1/WHO.csv")
who_from_internet <- read.csv=("https://frogames.es/course-contents/r/intro/tema1/WHO.csv")
who_from_internet <- read.csv("https://frogames.es/course-contents/r/intro/tema1/WHO.csv")
View(who_from_internet)
who_from_internet <- read.csv("https://frogames.es/course-contents/r/intro/tema1/WHO.csv", na.strings="NA")
View(who_from_internet)
who_from_internet <- read.csv("https://frogames.es/course-contents/r/intro/tema1/WHO.csv",
na.strings="NA", stringsAsFactors = FALSE)
View(who_from_internet)
install.packages("XML")
library(XML)
library(XML)
url <- "./data/tema1/cs_catalog.xml"
View(who_from_internet)
url <- "./data/tema1/cs_catalog.xml"
xmldoc <- xmlParse(url)
url <- "data/tema1/cs_catalog.xml"
xmldoc <- xmlParse(url)
url <- "data/tema1/cd_catalog.xml"
xmldoc <- xmlParse(url)
rootnode <- xmlRoot(xmldoc)
rootnode[1]
rootnode[0]
cds_data <- xmlSApply(rootnode, function(x) xmlSApply(x, xmlValue))
View(cds_data)
cds.catalog <- data.frame(t(cds_data), row.names=NULL)
View(cds.catalog)
cds.catalog <- data.frame(t(cds_data)) # transposición
View(cds.catalog)
, row.names=NULL
View(cds_data)
View(cds.catalog)
cds.catalog <- data.frame(t(cds_data), row.names=NULL) # transposición
View(cds.catalog)
head(cds.catalog, 2)
cds.catalog[1:5,]
source('~/Estudios/Estudios MOOC/Udemy/CursoR/r-course/02-analisis-xml.R')
source('~/Estudios/Estudios MOOC/Udemy/CursoR/r-course/02-analisis-xml.R')
install.packages("XML")
library(XML)
url <- "data/tema1/cd_catalog.xml"
xmldoc <- xmlParse(url) # XMLInternalDocument
rootnode <- xmlRoot(xmldoc)
rootnode[1]
cds_data <- xmlSApply(rootnode, function(x) xmlSApply(x, xmlValue))
cds.catalog <- data.frame(t(cds_data), row.names=NULL) # transposición
head(cds.catalog, 2)
cds.catalog[1:5,]
View(cds_data)
population_url <- "data/tema1/WorldPopulation-wiki.htm"
tables <- readHTMLTable(popultion_url)
tables <- readHTMLTable(population_url)
View(tables)
tables[[6]]
most_populated <- tables[[6]]
head(most_populated, 3)
custom_table <- readHTMLTable(population_url, which = 6)
View(custom_table)
install.packages("jsonlite")
library(jsonlite)
dat.1 <- fromJSON("data/tema1/students.json")
View(dat.1)
dat.2 <- fromJSON("data/tema1/student-courses.json")
View(dat.2)
utl <- "https://finance.yahoo.com/webservice/v1/symbols/allcurrencies/quote?format=json"
url <- "https://finance.yahoo.com/webservice/v1/symbols/allcurrencies/quote?format=json"
currencies <- fromJSON(url)
install.packages("curl")
library(curl)
install.packages("curl")
install.packages("curl")
url <- "http://www.floatrates.com/daily/usd.json"
currencies <- fromJSON(url)
currencies <- fromJSON(url)
install.packages("jsonlite")
library(jsonlite)
install.packages("curl")
library(curl)
dat.1 <- fromJSON("data/tema1/students.json")
dat.2 <- fromJSON("data/tema1/student-courses.json")
url <- "http://www.floatrates.com/daily/usd.json"
currencies <- fromJSON(url)
View(currencies)
View(currencies)
currencies[["eur"]]
currencies$eur
url_CSSEGISandData <- "https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_daily_reports/04-17-2020.csv"
covid <- read.csv(url_CSSEGISandData)
View(covid)
url_CSSEGISandData <- "https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_daily_reports/04-17-2020.csv"
covid <- readHTMLTable(url_CSSEGISandData)
install.packages("XML")
library(XML)
covid <- readHTMLTable(url_CSSEGISandData)
url_CSSEGISandData <- "data/tema1/04-17-2020.csv"
url_CSSEGISandData <- "data/tema1/04-17-2020.csv"
covid <- readHTMLTable(url_CSSEGISandData)
View(covid)
covid$NULL
head(covid$NULL,3)
head(covid,3)
install.packages("jsonlite")
library(jsonlite)
dat.1 <- fromJSON("data/tema1/students.json")
dat.2 <- fromJSON("data/tema1/student-courses.json")
install.packages("curl")
library(curl)
install.packages("jsonlite")
url <- "http://www.floatrates.com/daily/usd.json"
currencies <- fromJSON(url)
currencies[["eur"]]
currencies$eur
da
dat.1[c(2,5,8),]
install.packages("jsonlite")
library(jsonlite)
dat.1 <- fromJSON("data/tema1/students.json")
dat.2 <- fromJSON("data/tema1/student-courses.json")
install.packages("curl")
library(curl)
url <- "http://www.floatrates.com/daily/usd.json"
currencies <- fromJSON(url)
currencies[["eur"]]
currencies$eur
dat.1[c(2,5,8),]
students.data <- read.fwf("data/tema1/student-fwf.txt",
widths=c(4, 40, 55, 4))
header(students.data, 3)
students.data <- read.fwf("data/tema1/student-fwf.txt",
widths=c(4, 15, 20, 15, 4))
View(students.data)
col.names=c("id", "nombre", "email", "carrera", "año")
header(students.data, 3)
students.data <- read.fwf("data/tema1/student-fwf.txt",
students.data <- read.fwf("data/tema1/student-fwf.txt",
widths=c(4, 15, 20, 15, 4),
col.names=c("id", "nombre", "email", "carrera", "año"))
View(students.data)
View(students.data)
View(students.data)
students.data <- read.fwf("data/tema1/student-fwf.txt",
widths=c(4, 15, 20, 15, 4),
col.names=c("id", "nombre", "email", "carrera", "año"))
View(students.data)
View(students.data)
header(students.data, 3)
head(students.data, 3)
students.data.header <- read.fwf("data/tema1/student-fwf-header.txt",
widths=c(4, 15, 20, 15, 4),
header=T, sep="t",
skip=2)
students.data.header <- read.fwf("data/tema1/student-fwf-header.txt",
widths=c(4, 15, 20, 15, 4),
header=T, sep="\t",
skip=2)
head(students.data, 3)
head(students.data.header, 3)
View(students.data.header)
View(students.data.header)
students.data.no_email <- read.fwf("data/tema1/student-fwf.txt",
widths=c(4, 15, -20, 15, 4),
col.names=c("id", "nombre", "carrera", "año"))
head(students.data.no_email, 3)
# Calculadora
includeScript("common.R")
setwd("~/Estudios/Estudios MOOC/Udemy/Estadística Descriptiva/repositorio/r-basic_mossa/scripts/tema1")
